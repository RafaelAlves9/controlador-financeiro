{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Documents\\\\ControleDeFinan\\xE7as\\\\src\\\\components\\\\InfoArea\\\\index.tsx\";\nimport * as C from './styles';\nimport { formatCurrentMonth } from '../../helpers/dateFilter';\nimport { ResumeItem } from '../ResumeItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InfoArea = ({\n  currentMonth,\n  onMonthChange,\n  income,\n  expense\n}) => {\n  const handlePrevMonth = () => {\n    let [year, month] = currentMonth.split('-');\n    let currentDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n    currentDate.setMonth(currentDate.getMonth() - 1);\n    onMonthChange(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}`);\n  };\n\n  const handleNextMonth = () => {\n    let [year, month] = currentMonth.split('-');\n    let currentDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n    currentDate.setMonth(currentDate.getMonth() + 1);\n    onMonthChange(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.MonthArea, {\n      children: [/*#__PURE__*/_jsxDEV(C.MonthArrow, {\n        onClick: handlePrevMonth,\n        children: \"\\u2B05\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(C.MonthTitle, {\n        children: formatCurrentMonth(currentMonth)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(C.MonthArrow, {\n        onClick: handleNextMonth,\n        children: \"\\u27A1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(C.ResumeArea, {\n      children: [/*#__PURE__*/_jsxDEV(ResumeItem, {\n        title: \"Receitas\",\n        value: income\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResumeItem, {\n        title: \"Despesas\",\n        value: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResumeItem, {\n        title: \"Balan\\xE7o\",\n        value: income - expense,\n        color: income - expense < 0 ? 'red' : 'green'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = InfoArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoArea\");","map":{"version":3,"sources":["C:/Users/Rafael/Documents/ControleDeFinanças/src/components/InfoArea/index.tsx"],"names":["C","formatCurrentMonth","ResumeItem","InfoArea","currentMonth","onMonthChange","income","expense","handlePrevMonth","year","month","split","currentDate","Date","parseInt","setMonth","getMonth","getFullYear","handleNextMonth"],"mappings":";AAAA,OAAO,KAAKA,CAAZ,MAAmB,UAAnB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,UAAT,QAA2B,eAA3B;;AASA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA,MAA/B;AAAuCC,EAAAA;AAAvC,CAAD,KAA6D;AAEjF,QAAMC,eAAe,GAAG,MAAM;AAC1B,QAAI,CAACC,IAAD,EAAOC,KAAP,IAAgBN,YAAY,CAACO,KAAb,CAAmB,GAAnB,CAApB;AACA,QAAIC,WAAW,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACL,IAAD,CAAjB,EAAyBK,QAAQ,CAACJ,KAAD,CAAR,GAAkB,CAA3C,EAA8C,CAA9C,CAAlB;AACAE,IAAAA,WAAW,CAACG,QAAZ,CAAsBH,WAAW,CAACI,QAAZ,KAAyB,CAA/C;AACAX,IAAAA,aAAa,CAAE,GAAEO,WAAW,CAACK,WAAZ,EAA0B,IAAGL,WAAW,CAACI,QAAZ,KAAyB,CAAE,EAA5D,CAAb;AACH,GALD;;AAOA,QAAME,eAAe,GAAG,MAAM;AAC1B,QAAI,CAACT,IAAD,EAAOC,KAAP,IAAgBN,YAAY,CAACO,KAAb,CAAmB,GAAnB,CAApB;AACA,QAAIC,WAAW,GAAG,IAAIC,IAAJ,CAASC,QAAQ,CAACL,IAAD,CAAjB,EAAyBK,QAAQ,CAACJ,KAAD,CAAR,GAAkB,CAA3C,EAA8C,CAA9C,CAAlB;AACAE,IAAAA,WAAW,CAACG,QAAZ,CAAsBH,WAAW,CAACI,QAAZ,KAAyB,CAA/C;AACAX,IAAAA,aAAa,CAAE,GAAEO,WAAW,CAACK,WAAZ,EAA0B,IAAGL,WAAW,CAACI,QAAZ,KAAyB,CAAE,EAA5D,CAAb;AACH,GALD;;AAOA,sBACI,QAAC,CAAD,CAAG,SAAH;AAAA,4BACI,QAAC,CAAD,CAAG,SAAH;AAAA,8BACI,QAAC,CAAD,CAAG,UAAH;AAAc,QAAA,OAAO,EAAER,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,CAAD,CAAG,UAAH;AAAA,kBAAeP,kBAAkB,CAACG,YAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,CAAD,CAAG,UAAH;AAAc,QAAA,OAAO,EAAEc,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,CAAD,CAAG,UAAH;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,UAAlB;AAA6B,QAAA,KAAK,EAAEZ;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,UAAlB;AAA6B,QAAA,KAAK,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AACI,QAAA,KAAK,EAAC,YADV;AAEI,QAAA,KAAK,EAAED,MAAM,GAAGC,OAFpB;AAGI,QAAA,KAAK,EAAGD,MAAM,GAACC,OAAR,GAAmB,CAAnB,GAAuB,KAAvB,GAA+B;AAH1C;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAlCM;KAAMJ,Q","sourcesContent":["import * as C from './styles';\r\nimport { formatCurrentMonth } from '../../helpers/dateFilter';\r\nimport { ResumeItem } from '../ResumeItem';\r\n\r\ntype Props = {\r\n    currentMonth: string;\r\n    onMonthChange: (newMonth: string) => void;\r\n    income: number;\r\n    expense: number;\r\n}\r\n\r\nexport const InfoArea = ({ currentMonth, onMonthChange, income, expense }: Props) => {\r\n    \r\n    const handlePrevMonth = () => {\r\n        let [year, month] = currentMonth.split('-');\r\n        let currentDate = new Date(parseInt(year), parseInt(month) - 1, 1);\r\n        currentDate.setMonth( currentDate.getMonth() - 1 );\r\n        onMonthChange(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}`);\r\n    }\r\n\r\n    const handleNextMonth = () => {\r\n        let [year, month] = currentMonth.split('-');\r\n        let currentDate = new Date(parseInt(year), parseInt(month) - 1, 1);\r\n        currentDate.setMonth( currentDate.getMonth() + 1 );\r\n        onMonthChange(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}`);\r\n    }\r\n\r\n    return (\r\n        <C.Container>\r\n            <C.MonthArea>\r\n                <C.MonthArrow onClick={handlePrevMonth}>⬅️</C.MonthArrow>\r\n                <C.MonthTitle>{formatCurrentMonth(currentMonth)}</C.MonthTitle>\r\n                <C.MonthArrow onClick={handleNextMonth}>➡️</C.MonthArrow>\r\n            </C.MonthArea>\r\n            <C.ResumeArea>\r\n                <ResumeItem title=\"Receitas\" value={income} />\r\n                <ResumeItem title=\"Despesas\" value={expense} />\r\n                <ResumeItem\r\n                    title=\"Balanço\"\r\n                    value={income - expense}\r\n                    color={(income-expense) < 0 ? 'red' : 'green'}\r\n                />\r\n            </C.ResumeArea>\r\n        </C.Container>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}