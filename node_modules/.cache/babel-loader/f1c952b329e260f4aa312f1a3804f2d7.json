{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Documents\\\\ControleDeFinan\\xE7as\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport * as C from './App.styles';\nimport { categories } from './data/categories';\nimport { items } from './data/items';\nimport { getCurrentMonth, filterListByMonth } from './helpers/dateFilter';\nimport { TableArea } from './components/TableArea';\nimport { InfoArea } from './components/InfoArea';\nimport { InputArea } from './components/InputArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = useState(items);\n  const [filteredList, setFilteredList] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMonth());\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  useEffect(() => {\n    setFilteredList(filterListByMonth(list, currentMonth));\n  }, [list, currentMonth]);\n  useEffect(() => {\n    let incomeCount = 0;\n    let expenseCount = 0;\n\n    for (let i in filteredList) {\n      if (categories[filteredList[i].category].expense) {\n        expenseCount += filteredList[i].value;\n      } else {\n        incomeCount += filteredList[i].value;\n      }\n    }\n\n    setIncome(incomeCount);\n    setExpense(expenseCount);\n  }, [filteredList]);\n\n  const handleMonthChange = newMonth => {\n    setCurrentMonth(newMonth);\n  };\n\n  const handleAddItem = item => {\n    let newList = [...list];\n    newList.push(item);\n    setList(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.Header, {\n      children: /*#__PURE__*/_jsxDEV(C.HeaderText, {\n        children: \"Sistema Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C.Body, {\n      children: [/*#__PURE__*/_jsxDEV(InfoArea, {\n        currentMonth: currentMonth,\n        onMonthChange: handleMonthChange,\n        income: income,\n        expense: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputArea, {\n        onAdd: handleAddItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableArea, {\n        list: filteredList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iDo0GUT5sJXJH9SDeWU0xjYbiB0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Rafael/Documents/ControleDeFinanÃ§as/src/App.tsx"],"names":["useState","useEffect","C","categories","items","getCurrentMonth","filterListByMonth","TableArea","InfoArea","InputArea","App","list","setList","filteredList","setFilteredList","currentMonth","setCurrentMonth","income","setIncome","expense","setExpense","incomeCount","expenseCount","i","category","value","handleMonthChange","newMonth","handleAddItem","item","newList","push"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport * as C from './App.styles';\r\nimport { Item } from './types/Item';\r\nimport { categories } from './data/categories';\r\nimport { items } from './data/items';\r\nimport { getCurrentMonth, filterListByMonth } from './helpers/dateFilter';\r\nimport { TableArea } from './components/TableArea';\r\nimport { InfoArea } from './components/InfoArea';\r\nimport { InputArea } from './components/InputArea';\r\n\r\nconst App = () => {\r\n  const [list, setList] = useState(items);\r\n  const [filteredList, setFilteredList] = useState<Item[]>([]);\r\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMonth());\r\n  const [income, setIncome] = useState(0);\r\n  const [expense, setExpense] = useState(0);\r\n\r\n  useEffect(()=>{\r\n    setFilteredList( filterListByMonth(list, currentMonth) );\r\n  }, [list, currentMonth]);\r\n\r\n  useEffect(()=>{\r\n    let incomeCount = 0;\r\n    let expenseCount = 0;\r\n\r\n    for(let i in filteredList) {\r\n      if(categories[filteredList[i].category].expense) {\r\n        expenseCount += filteredList[i].value;\r\n      } else {\r\n        incomeCount += filteredList[i].value;\r\n      }\r\n    }\r\n\r\n    setIncome(incomeCount);\r\n    setExpense(expenseCount);\r\n  }, [filteredList]);\r\n\r\n  const handleMonthChange = (newMonth: string) => {\r\n    setCurrentMonth(newMonth);\r\n  }\r\n\r\n  const handleAddItem = (item: Item) => {\r\n    let newList = [...list];\r\n    newList.push(item);\r\n    setList(newList);\r\n  }\r\n\r\n  return (\r\n    <C.Container>\r\n      <C.Header>\r\n        <C.HeaderText>Sistema Financeiro</C.HeaderText>\r\n      </C.Header>\r\n      <C.Body>\r\n        \r\n        <InfoArea\r\n          currentMonth={currentMonth}\r\n          onMonthChange={handleMonthChange}\r\n          income={income}\r\n          expense={expense}\r\n        />\r\n\r\n        <InputArea onAdd={handleAddItem} />\r\n\r\n        <TableArea list={filteredList} />\r\n\r\n      </C.Body>\r\n    </C.Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}